os: linux
dist: xenial

language: node_js

node_js:
  - '12'

python:
  - '3.6'

addons:
  # https://stackoverflow.com/questions/57903415/travis-ci-chrome-62-instead-of-77
  chrome: stable

branches:
  only:
    - master

cache:
  npm: false
  yarn: false

notifications:
  email: false
  slack:
    rooms:
      - $SLACK_NOTIFICATION_TOKEN#distribution-alerts
    on_pull_requests: true

env:
  VERSION: '$TRAVIS_BUILD_NUMBER'

before_install:
  - export APPLITOOLS_BATCH_ID=`echo ${TRAVIS_PULL_REQUEST_SHA:=$TRAVIS_COMMIT}`
  - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY
  - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_KEY
  - npm config set '//registry.npmjs.org/:_authToken' $NPM_TOKEN
  - npm config set '//npm.pkg.github.com/:_authToken' $GH_TOKEN
  - npm config set @typeform:registry https://npm.pkg.github.com/

jobs:
  include:
    - stage: 'Test'
      name: 'Lint'
      if: branch = master
      script:
        - yarn lint
    - name: 'Unit Tests'
      if: branch = master
      script:
        - yarn test:unit
    - name: 'Functional Tests (Internal)'
      if: fork = false AND branch = master
      script:
        - yarn serve-demo & export EMBED_PID=$!
        - yarn test:functional  --record --parallel --group functional
        - kill $EMBED_PID
    - name: 'Functional Tests (External)'
      if: fork = true AND branch = master
      script:
        - yarn serve-demo & export EMBED_PID=$!
        - yarn test:functional --record false
        - kill $EMBED_PID
    - name: 'Visual Tests (Internal)'
      if: fork = false AND branch = master
      script:
        - yarn serve-demo & export EMBED_PID=$!
        - yarn test:visual  --record --parallel --group visual
        - kill $EMBED_PID
    - stage: 'Release'
      name: 'Deploy Preview to AWS'
      # Deploy to preview preview URL for testing purposes. Only deploy pull requests to 'master' branch.
      if: (type = pull_request AND branch = master AND fork = false) OR (type = push AND branch =~ /preview-./)
      script:
        - yarn build
        - pip install --user awscli
        - yarn add @typeform/jarvis
        - ./scripts/consolidate-dist.sh
        - DEBUG=jarvis yarn run jarvis deploy --path dist --preview --notify-preview
    - name: 'Release to NPM'
      if: branch = master AND type = push
      script:
        - yarn semantic-release
    - name: 'Release to AWS'
      if: branch = master AND type = push
      script:
        - yarn build
        - pip install --user awscli
        - yarn add @typeform/jarvis
        - ./scripts/consolidate-dist.sh
        - DEBUG=jarvis jarvis deploy --path dist
