name: PR

on:
  pull_request:
    branches: [master]

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
  AWS_ASSETS_BUCKET: 'typeform-public-assets/embed'
  PUBLIC_CDN_URL: 'https://embed.typeform.com'
  JARVIS_NOTIFY_PREVIEW_TEMPLATE: '*[BOT]* Preview available: https://embed.typeform.com/${version}/embed.js'
  EYES_API_KEY: ${{ secrets.EYES_API_KEY }}
  APPLITOOLS_BATCH_ID: ${{ github.event.pull_request.head.sha }}

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Set GitHub packages registry
        run: |
          npm config set '//npm.pkg.github.com/:_authToken' $GH_TOKEN
          npm config set @typeform:registry https://npm.pkg.github.com/
      - name: Get yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('.github/workflows/**.yml') }}

      - name: Install Node.js dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - run: yarn lint

  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Set GitHub packages registry
        run: |
          npm config set '//npm.pkg.github.com/:_authToken' $GH_TOKEN
          npm config set @typeform:registry https://npm.pkg.github.com/
      - name: Get yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('.github/workflows/**.yml') }}

      - name: Install Node.js dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - run: yarn test:unit

  functional:
    name: Functional Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Set GitHub packages registry
        run: |
          npm config set '//npm.pkg.github.com/:_authToken' $GH_TOKEN
          npm config set @typeform:registry https://npm.pkg.github.com/
      - name: Get yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('.github/workflows/**.yml') }}

      - name: Install Node.js dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - run: yarn build

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: yarn serve-demo
          wait-on: 'http://localhost:8080'
          command: yarn test:functional

  visual:
    name: Visual Tests
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.full_name == github.repository
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: Set GitHub packages registry
        run: |
          npm config set '//npm.pkg.github.com/:_authToken' $GH_TOKEN
          npm config set @typeform:registry https://npm.pkg.github.com/
      - name: Get yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('.github/workflows/**.yml') }}

      - name: Install Node.js dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - run: yarn build

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: yarn serve-demo
          wait-on: 'http://localhost:8080'
          command: yarn test:visual

  deploy_preview:
    name: Deploy Preview to AWS
    runs-on: ubuntu-latest
    if: github.event.pull_request.head.repo.full_name == github.repository
    needs: [lint, unit, functional, visual]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - run: rm ./.npmrc

      - name: Set GitHub packages registry
        run: |
          npm config set '//npm.pkg.github.com/:_authToken' $GH_TOKEN
          npm config set @typeform:registry https://npm.pkg.github.com/

      - name: Get yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('.github/workflows/**.yml') }}

      - name: Install Node.js dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - run: yarn build

      - name: Deploy with jarvis
        run: |
          yarn add @typeform/jarvis@11.0.0
          ./scripts/consolidate-dist.sh
          DEBUG=jarvis yarn run jarvis deploy --path dist --preview --notify-preview
